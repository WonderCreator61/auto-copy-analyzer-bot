export type TWalletInfo = {
  buy: number;
  buy_1d: number;
  buy_7d: number;
  buy_30d: number;
  sell: number;
  sell_1d: number;
  sell_7d: number;
  sell_30d: number;
  pnl: number;
  pnl_1d: number;
  pnl_7d: number;
  pnl_30d: number;
  all_pnl: number;
  realized_profit: number;
  realized_profit_1d: number;
  realized_profit_7d: number;
  realized_profit_30d: number;
  unrealized_profit: number;
  unrealized_pnl: number;
  total_profit: number;
  total_profit_pnl: number;
  balance: string;
  eth_balance: string;
  sol_balance: string;
  trx_balance: string;
  bnb_balance: string;
  total_value: number;
  winrate: number;
  token_sold_avg_profit: number;
  history_bought_cost: number;
  token_avg_cost: number;
  token_num: number;
  profit_num: number;
  pnl_lt_minus_dot5_num: number;
  pnl_minus_dot5_0x_num: number;
  pnl_lt_2x_num: number;
  pnl_2x_5x_num: number;
  pnl_gt_5x_num: number;
  bind: boolean;
  avatar: string;
  name: string;
  ens: string;
  tags: string[];
  tag_rank: {
    kol: number;
  };
  twitter_name: string;
  twitter_username: string;
  twitter_bind: boolean;
  twitter_fans_num: number;
  followers_count: number;
  is_contract: boolean;
  last_active_timestamp: number;
  risk: {
    token_active: number;
    token_honeypot: number;
    token_honeypot_ratio: number;
    no_buy_hold: number;
    no_buy_hold_ratio: number;
    sell_pass_buy: number;
    sell_pass_buy_ratio: number;
    fast_tx: number;
    fast_tx_ratio: number;
  };
  avg_holding_peroid: number;
  updated_at: number;
  refresh_requested_at: number | null;
};

export type TToken = {
  token: {
    address: string;
    token_address: string;
    symbol: string;
    name: string;
    decimals: number;
    logo: string;
    price_change_6h: string;
    is_show_alert: boolean;
    is_honeypot: boolean | null;
  };
  balance: number;
  usd_value: number;
  realized_profit_30d: number;
  realized_profit: number;
  realized_pnl: number;
  realized_pnl_30d: number;
  unrealized_profit: number;
  unrealized_pnl: number;
  total_profit: number;
  total_profit_pnl: number;
  avg_cost: number;
  avg_sold: number;
  buy_30d: number;
  sell_30d: number;
  sells: number;
  price: number;
  cost: number;
  position_percent: number;
  last_active_timestamp: number;
  history_sold_income: number;
  history_bought_cost: number;
  start_holding_at: number;
  end_holding_at: number;
  liquidity: number;
  total_supply: number;
  wallet_token_tags: string[];
  created_at: number | null;
  migrated_at: number | null;
  buy_at?: number;
  buy?: number;
  sell_at?: number;
  creator?: string;
};

export type TTokenInformation = {
    address: string;
    symbol: string;
    name: string;
    decimals: number;
    logo: string;
    biggest_pool_address: string;
    open_timestamp: number;
    holder_count: number;
    circulating_supply: string;
    total_supply: string;
    max_supply: string;
    liquidity: string;
    creation_timestamp: number;
    pool: {
      address: string;
      pool_address: string;
      quote_address: string;
      quote_symbol: string;
      liquidity: string;
      base_reserve: string;
      quote_reserve: string;
      initial_liquidity: string;
      initial_base_reserve: string;
      initial_quote_reserve: string;
      creation_timestamp: number;
      base_reserve_value: string;
      quote_reserve_value: string;
      quote_vault_address: string;
      base_vault_address: string;
      creator: string;
      exchange: string;
      token0_address: string;
      token1_address: string;
      base_address: string;
      fee_ratio: string;
    };
    dev: {
      address: string;
      creator_address: string;
      creator_token_balance: string;
      creator_token_status: string;
      twitter_name_change_history: Array<{
        address: string;
        twitter_username: string;
        rename_timestamp: number;
      }>;
      top_10_holder_rate: string;
      dexscr_ad: number;
      dexscr_update_link: number;
      cto_flag: number;
    };
    price: {
      address: string;
      price: string;
      price_1m: string;
      price_5m: string;
      price_1h: string;
      price_6h: string;
      price_24h: string;
      buys_1m: number;
      buys_5m: number;
      buys_1h: number;
      buys_6h: number;
      buys_24h: number;
      sells_1m: number;
      sells_5m: number;
      sells_1h: number;
      sells_6h: number;
      sells_24h: number;
      volume_1m: string;
      volume_5m: string;
      volume_1h: string;
      volume_6h: string;
      volume_24h: string;
      buy_volume_1m: string;
      buy_volume_5m: string;
      buy_volume_1h: string;
      buy_volume_6h: string;
      buy_volume_24h: string;
      sell_volume_1m: string;
      sell_volume_5m: string;
      sell_volume_1h: string;
      sell_volume_6h: string;
      sell_volume_24h: string;
      swaps_1m: number;
      swaps_5m: number;
      swaps_1h: number;
      swaps_6h: number;
      swaps_24h: number;
      hot_level: number;
    };
    standard: string;
  };
  

  export type TTradeH = {
    tx_hash: string;
    event_type: "buy" | "sell";
    timestamp: number;
    token_amount: string;
    quote_address: string;
    quote_amount: string;
    cost_usd: number;
    buy_cost_usd: number | null;
    price: number;
    price_usd: number;
    from_address: string | null;
    from_is_contract: boolean | null;
    to_address: string | null;
    to_is_contract: boolean | null;
    is_open_or_close: number;
  };
  
  export type TTokenCandlePoint = {
    time: string;
    open: string;
    high: string;
    low: string;
    close: string;
    volume: string;
  };
  

  export type TTrader = {
    address: string;
    account_address: string;
    addr_type: number;
    amount_cur: number;
    usd_value: number;
    cost_cur: number;
    sell_amount_cur: number;
    sell_amount_percentage: number;
    sell_volume_cur: number;
    buy_volume_cur: number;
    buy_amount_cur: number;
    netflow_usd: number;
    netflow_amount: number;
    buy_tx_count_cur: number;
    sell_tx_count_cur: number;
    wallet_tag_v2: string;
    native_balance: string;
    balance: number;
    profit: number;
    realized_profit: number;
    profit_change: number;
    amount_percentage: number;
    unrealized_profit: number;
    unrealized_pnl: number;
    avg_cost: number;
    avg_sold: number;
    accu_amount: number;
    accu_cost: number;
    cost: number;
    total_cost: number;
    transfer_in: boolean;
    is_new: boolean;
    is_suspicious: boolean;
    start_holding_at: number;
    end_holding_at: number;
    last_active_timestamp: number;
    native_transfer: {
      name: string;
      from_address: string;
      timestamp: number;
    };
    tags: string[];
    maker_token_tags: string[];
    name: string | null;
    avatar: string | null;
    twitter_username: string | null;
    twitter_name: string | null;
    created_at: number;
  };
  

  export type TSetting = {
    min_mc: number | null;
    max_mc: number | null;
    min_buy: number | null;
    max_buy: number | null;
    tx: number;
    realTotalProfit: number;
    totalProfit: number;
    totalPNL: number;
    totalRealPNL: number;
    realWinRate: number;
    winRate: number;
    realTx: number;
    avgHoldingTime: string;
  };
  
  export type TFilters = {
    min_mc: number | null;
    max_mc: number | null;
    min_buy: number | null;
    max_buy: number | null;
    tx: number;
  };
  